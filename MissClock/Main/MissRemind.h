#ifndef __MissRemind__
#define __MissRemind__

/**
@file
Subclass of MissRemindBase, which is generated by wxFormBuilder.
*/

#include "../Generated/GUIFrame.h"
#include <wx/brush.h>

#include <windef.h>
#include <wingdi.h>
//// end generated include

/** Implementing MissRemindBase */
class MissRemind : public MissRemindBase
{
	public:
		/** Constructor */
		MissRemind( wxWindow* parent );
	//// end generated class members
    enum PatternPos{
        PP_TOP_LEFT,    PP_TOP_MID,    PP_TOP_RIGHT,
        PP_MID_LEFT,    PP_MID_RIGHT,  PP_MID_MID,
        PP_BOTTOM_LEFT, PP_BOTTOM_MID, PP_BOTTOM_RIGHT};

    enum FillPos{
        PP_TOP_OTHER, PP_BOTTOM_OTHER, PP_LEFT_OTHER, PP_RIGHT_OTHER};

    struct PatternInfo
    {
        PatternPos pos;
        wxBitmap   bit;
    };
    struct FillInfo
    {
        int        nSize;
        FillPos    pos;
        wxBrush    brush;
    };
    struct OutTextInfo
    {
        int      nBottomHeight;
        int      nTextWidth;
        wxPoint  pos;
        wxFont   font;
        wxColour color;
        wxBitmap bitmap;
    };

    protected:
        int TakeOrderWithNewline(int nTextWidth, const std::vector<wxString>& vecIn, std::vector<wxString>& vecOut);

	private:
        void OnLeftDown( wxMouseEvent& event );
        void OnTimer(wxTimerEvent& event);
        void OnDrawSkin();

        const wxBitmap* GetPatternByPos(const std::vector<PatternInfo> &vecPatterns, const PatternPos &pos);
    private:
        HWND                             m_hWnd;
        BLENDFUNCTION                    m_Blend;
        SIZE                             m_SizeWindow;
        wxBitmap                         m_bpUI;
};

#endif // __MissRemind__
